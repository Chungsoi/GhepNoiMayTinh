Code bài thực hành số 1 part 2 môn Kỹ thuật ghép nối với máy tính ICTU
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;
using System.Threading;
//dùng lệnh với Serial.Port
using System.IO;
using System.IO.Ports;
using System.Xml;
using System.Data.SqlClient;//thư viện hỗ trợ kết nối SQL
namespace DoLuong
{
    public partial class Form1 : Form
    {
        int rowIndex = 0;
       //=========================
        public Form1()
        {
            InitializeComponent();
       }
        //===============
        SqlConnection con = new SqlConnection(@"Data Source=(local);Initial Catalog=NVAn_CNTDH_K14A;Integrated Security=True");//Chuỗi kết nối CSDL
        SqlCommandBuilder UpdateCSDL;
        SqlDataAdapter da;
        DataTable dt;
        SqlCommand cmd;
        //===============
        private void Form1_Load(object sender, EventArgs e)
        {
            timer1.Start();
        }

        private void timer1_Tick(object sender, EventArgs e)
        {
            getRealTime.Text = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff");
        }
        //======================================
        //Tạo hàm kết nối CSDL
        private void KetNoiCSDL()
        {
            //Tạo chuỗi kết nối
            string sql = "select * from ValueTemp";//lấy dữ liệu từ table ValueTemp
            SqlCommand com = new SqlCommand(sql, con);//truy vấn cơ sở dữ liệu
            com.CommandType = CommandType.Text;
            da = new SqlDataAdapter(com);//Tải dữ liệu về
            dt = new DataTable();//Tạo không gian ảo lưu trữ dữ liệu
            da.Fill(dt);//Lưu dữ liệu vào không gian lưu trữ
            con.Close();//Đóng kết nối
            dataGridView1.DataSource = dt;//Gán dữ liệu vào DatagridView
            dataGridView1.FirstDisplayedScrollingRowIndex = dataGridView1.RowCount - 1;           //autoscroll datagridview to end point
           
        }
        //==============
        private void BTClick_Click(object sender, EventArgs e)//Test click để tự thêm vào CSDL
        {
            try
            {
                con.Open();
                cmd = new SqlCommand("INSERT INTO ValueTemp (ID,Value,TimeCreat) VALUES (@ID,@Value,@TimeCreat)", con);
                cmd.Parameters.Add("@ID", getID.Text);
                cmd.Parameters.Add("@Value", getTEMP.Text);
                cmd.Parameters.Add("@TimeCreat", getDATETIME.Text);
                //cmd.Parameters.Add("@TimeCreat", DateTime.Now.ToString("dd-MM-yyyy HH:mm:ss.fff"));
                cmd.ExecuteNonQuery();
                KetNoiCSDL();
                con.Close();
            }
            catch
            {
MessageBox.Show("The value is identical", "Lỗi", MessageBoxButtons.OK, MessageBoxIcon.Error);
                con.Close();
            }
            
            //=======================mở kết nối đến CSDL để kiểm tra số thứ tự cũ==========
            BTRepair.Enabled = true;
            BTUpdate.Enabled = true;
            BTDel.Enabled = true;
            loadDATA();
        }
        private void loadDATA()
        {
            if (dataGridView1.Rows.Count - 1 > 0)
            {
                BTDel.Enabled = true;
                BTUpdate.Enabled = true;
                BTDelAll.Enabled = true;
                rowIndex = dataGridView1.CurrentCell.RowIndex;//chọn hàng được click
                getID.Text = dataGridView1["ID", rowIndex].Value.ToString();
                getTEMP.Text = dataGridView1["Value", rowIndex].Value.ToString();
                getDATETIME.Text = dataGridView1["TimeCreat", rowIndex].Value.ToString();
            }
            else
            {
                getID.Text = string.Empty;
                getTEMP.Text = string.Empty;
                getDATETIME.Text = string.Empty;
            }
        }
        //==============
        private void BTViewData_Click(object sender, EventArgs e)
        {
            con.Open();
            KetNoiCSDL();
            loadDATA();
            con.Close();
            dataGridView1.Enabled = true;
        }
        private void BTUpdate_Click(object sender, EventArgs e)
        { 
            //=========================Update data vào CSDL===================
            con.Open();
            UpdateCSDL = new SqlCommandBuilder(da);//Cập nhập CSDL moi
            try
            { 
                da.Update(dt);//Update dữ liệu vào bảng
                con.Close();
                BTUpdate.Enabled = false;
                MessageBox.Show("Sucess", "OK", MessageBoxButtons.OK, MessageBoxIcon.None);
            }
            Catch{
      MessageBox.Show("Value is Fail", "Lỗi", MessageBoxButtons.OK, MessageBoxIcon.Error);
                con.Close();
                return; }
            loadDATA();
        }
        private void BTDelAll_Click(object sender, EventArgs e)
        {
            con.Open();
            cmd = new SqlCommand("DELETE FROM ValueTemp", con); // xoá sạch hết dữ liệu Table
            cmd.ExecuteNonQuery();
            KetNoiCSDL();
            loadDATA();
MessageBox.Show("Delete All Data Sucess", "OK", MessageBoxButtons.OK, MessageBoxIcon.None);
            //Đã xoá hết dữ liệu rồi thì k còn dữ liệu để delete hay sửa chữa
            BTDel.Enabled = false;
            BTDelAll.Enabled = false;
            BTRepair.Enabled = false;
            BTUpdate.Enabled = false;
        }
        private void BTDel_Click(object sender, EventArgs e)
        {
            if (dataGridView1.Rows.Count - 1> 0)
            {
                rowIndex = dataGridView1.CurrentCell.RowIndex;//chọn hàng được click
                dataGridView1.Rows.RemoveAt(rowIndex);//xoá hàng
                BTUpdate.Enabled = true;
          MessageBox.Show("Sucess", "OK", MessageBoxButtons.OK, MessageBoxIcon.None);
            }
            else
            {
                BTUpdate.Enabled = false;
                BTDel.Enabled = false;
            }
        }
        private void dataGridView1_SelectionChanged(object sender, EventArgs e)
        {
            try
            {
                dataGridView1.CurrentRow.Selected = true;//Chọn cả hàng dữ liệu
            }
            Catch{}
        }

        private void BTRepair_Click(object sender, EventArgs e)
        {
            rowIndex = dataGridView1.CurrentCell.RowIndex;//chọn hàng được click
            dataGridView1[0, rowIndex].Value = getID.Text;
            dataGridView1[1, rowIndex].Value = getTEMP.Text;
            dataGridView1[2, rowIndex].Value = getDATETIME.Text;
            this.BindingContext[this.dataGridView1.DataSource].EndCurrentEdit();//Kết thúc edit dữ liệu trên datagrid
            //============load lại dữ liệu trên datagridview=========
            // this.dataGridView1.Refresh(); // Make sure this comes first
            //this.dataGridView1.Parent.Refresh(); // Make sure this comes second
            BTUpdate.Enabled = true;
        }
        private void dataGridView1_Click(object sender, EventArgs e)
        {
            getID.Enabled = true;
            getTEMP.Enabled = true;
            getDATETIME.Enabled = true;
            dataGridView1.Enabled = true;
            BTClick.Enabled = true;
            
            if (dataGridView1.Rows.Count - 1 > 0)
            {
                rowIndex = dataGridView1.CurrentCell.RowIndex;//chọn hàng được click
                getID.Text = dataGridView1["ID", rowIndex].Value.ToString();
                getTEMP.Text = dataGridView1["Value", rowIndex].Value.ToString();
              getDATETIME.Text = dataGridView1["TimeCreat",rowIndex].Value.ToString();
                if(getID.Text == string.Empty)
                {
                    BTClick.Enabled = true;
                    BTRepair.Enabled = false;
                    BTDel.Enabled = false;
                }
                else
                {
                    BTRepair.Enabled = true;
                    BTClick.Enabled = false;
                    BTDel.Enabled = true;
                    BTRepair.Enabled = true;
                }
            }
        }
    }
}
